{"ast":null,"code":"var _jsxFileName = \"/home/kaif/Desktop/Web-dev/rat-in-a-maze/rat-in-a-maze/src/components/Maze/Maze.js\";\nimport React, { Component, Fragment } from 'react';\nimport classes from './Maze.module.css';\nimport Cell from '../Cell/Cell';\nimport Button from '../Button/Button';\nimport Solutions from '../Solutions/Solutions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Maze extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submit = val => {\n      console.log(val);\n    };\n\n    this.onClick = () => {\n      let grid = new Array(3);\n\n      for (let i = 0; i < 3; i++) grid[i] = new Array(3);\n\n      for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) grid[i][j] = 0;\n      }\n\n      let ans = [];\n      let l = 2;\n      this.recurse(0, 0, grid, ans, l);\n      this.setState({\n        solutions: ans\n      });\n    };\n\n    this.tryAgain = () => {\n      this.setState({\n        solutions: []\n      });\n    };\n\n    let _grid = new Array(3);\n\n    for (let i = 0; i < 3; i++) _grid[i] = new Array(3);\n\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) _grid[i][j] = 0;\n    } //1 denotes constraint\n\n\n    _grid[1][0] = 1; //-1 is start\n\n    _grid[0][0] = -1; //3 denote end\n\n    _grid[2][2] = 3; //2 denotes valid answer\n\n    this.state = {\n      grid: null,\n      solutions: []\n    };\n  }\n\n  isSafe(i, j, matrix) {\n    return i >= 0 && j >= 0 && i < 3 && j < 3 && matrix[i][j] === 0 && this.state.grid[i][j] !== 1;\n  }\n\n  recurse(i, j, matrix, ans, l) {\n    if (i === 2 && j === 2) {\n      ans.push(matrix.toString());\n      return true;\n    }\n\n    let flag = 0;\n\n    if (this.isSafe(i - 1, j, matrix)) {\n      matrix[i - 1][j] = l++;\n      flag |= this.recurse(i - 1, j, matrix, ans, l);\n      l--;\n      matrix[i - 1][j] = 0;\n    }\n\n    if (this.isSafe(i + 1, j, matrix)) {\n      matrix[i + 1][j] = l++;\n      flag |= this.recurse(i + 1, j, matrix, ans, l);\n      l--;\n      matrix[i + 1][j] = 0;\n    }\n\n    if (this.isSafe(i, j - 1, matrix)) {\n      matrix[i][j - 1] = l++;\n      flag |= this.recurse(i, j - 1, matrix, ans, l);\n      l--;\n      matrix[i][j - 1] = 0;\n    }\n\n    if (this.isSafe(i, j + 1, matrix)) {\n      matrix[i][j + 1] = l++;\n      flag |= this.recurse(i, j + 1, matrix, ans, l);\n      l--;\n      matrix[i][j + 1] = 0;\n    }\n\n    return flag;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.mainContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.gridContainer,\n          children: this.state.grid.map(g => {\n            return g.map(gc => {\n              return /*#__PURE__*/_jsxDEV(Cell, {\n                value: gc\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 36\n              }, this);\n            });\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), this.state.solutions.length > 0 ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.tryAgain,\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 52\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.onClick,\n          children: \"Calculate Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.container,\n          children: [\"Total number of solutions are: \", /*#__PURE__*/_jsxDEV(\"bold\", {\n            children: this.state.solutions.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 56\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.secondaryContainer,\n        children: this.state.solutions.length > 0 && this.state.solutions.map(soln => {\n          return /*#__PURE__*/_jsxDEV(Solutions, {\n            string: soln\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Maze;","map":{"version":3,"sources":["/home/kaif/Desktop/Web-dev/rat-in-a-maze/rat-in-a-maze/src/components/Maze/Maze.js"],"names":["React","Component","Fragment","classes","Cell","Button","Solutions","Maze","constructor","props","submit","val","console","log","onClick","grid","Array","i","j","ans","l","recurse","setState","solutions","tryAgain","state","isSafe","matrix","push","toString","flag","render","mainContainer","gridContainer","map","g","gc","length","container","secondaryContainer","soln"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAIA,MAAMC,IAAN,SAAmBN,SAAnB,CACA;AAEIO,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;;AADJ,SAkCAC,MAlCA,GAkCQC,GAAD,IAAO;AAGVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAEH,KAvCD;;AAAA,SAyFAG,OAzFA,GAyFQ,MAAI;AACR,UAAIC,IAAI,GAAC,IAAIC,KAAJ,CAAU,CAAV,CAAT;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EACEF,IAAI,CAACE,CAAD,CAAJ,GAAQ,IAAID,KAAJ,CAAU,CAAV,CAAR;;AAEA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EACA;AACI,aAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EACCH,IAAI,CAACE,CAAD,CAAJ,CAAQC,CAAR,IAAW,CAAX;AACJ;;AAEF,UAAIC,GAAG,GAAC,EAAR;AACA,UAAIC,CAAC,GAAC,CAAN;AACA,WAAKC,OAAL,CAAa,CAAb,EAAe,CAAf,EAAiBN,IAAjB,EAAsBI,GAAtB,EAA0BC,CAA1B;AACA,WAAKE,QAAL,CAAc;AAACC,QAAAA,SAAS,EAACJ;AAAX,OAAd;AACJ,KAxGD;;AAAA,SA0GAK,QA1GA,GA0GS,MAAI;AACR,WAAKF,QAAL,CAAc;AAACC,QAAAA,SAAS,EAAC;AAAX,OAAd;AACJ,KA5GD;;AAEI,QAAIR,KAAI,GAAC,IAAIC,KAAJ,CAAU,CAAV,CAAT;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EACEF,KAAI,CAACE,CAAD,CAAJ,GAAQ,IAAID,KAAJ,CAAU,CAAV,CAAR;;AAEA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EACA;AACI,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EACCH,KAAI,CAACE,CAAD,CAAJ,CAAQC,CAAR,IAAW,CAAX;AACJ,KAVP,CAYM;;;AACAH,IAAAA,KAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,IAAW,CAAX,CAbN,CAkBM;;AACAA,IAAAA,KAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,IAAW,CAAC,CAAZ,CAnBN,CAqBM;;AACAA,IAAAA,KAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,IAAW,CAAX,CAtBN,CAwBM;;AAGF,SAAKU,KAAL,GAAW;AACPV,MAAAA,IAAI,EAAC,IADE;AAEPQ,MAAAA,SAAS,EAAC;AAFH,KAAX;AAIH;;AAUDG,EAAAA,MAAM,CAACT,CAAD,EAAGC,CAAH,EAAKS,MAAL,EACN;AACI,WAAOV,CAAC,IAAE,CAAH,IAAQC,CAAC,IAAE,CAAX,IAAgBD,CAAC,GAAC,CAAlB,IAAuBC,CAAC,GAAC,CAAzB,IAA8BS,MAAM,CAACV,CAAD,CAAN,CAAUC,CAAV,MAAe,CAA7C,IAAkD,KAAKO,KAAL,CAAWV,IAAX,CAAgBE,CAAhB,EAAmBC,CAAnB,MAAwB,CAAjF;AACH;;AAGDG,EAAAA,OAAO,CAACJ,CAAD,EAAGC,CAAH,EAAKS,MAAL,EAAYR,GAAZ,EAAgBC,CAAhB,EACP;AAEI,QAAGH,CAAC,KAAG,CAAJ,IAASC,CAAC,KAAG,CAAhB,EACA;AACIC,MAAAA,GAAG,CAACS,IAAJ,CAASD,MAAM,CAACE,QAAP,EAAT;AACA,aAAO,IAAP;AACH;;AAED,QAAIC,IAAI,GAAC,CAAT;;AACA,QAAG,KAAKJ,MAAL,CAAYT,CAAC,GAAC,CAAd,EAAgBC,CAAhB,EAAkBS,MAAlB,CAAH,EACA;AACIA,MAAAA,MAAM,CAACV,CAAC,GAAC,CAAH,CAAN,CAAYC,CAAZ,IAAeE,CAAC,EAAhB;AACAU,MAAAA,IAAI,IAAE,KAAKT,OAAL,CAAaJ,CAAC,GAAC,CAAf,EAAiBC,CAAjB,EAAmBS,MAAnB,EAA0BR,GAA1B,EAA8BC,CAA9B,CAAN;AACAA,MAAAA,CAAC;AACDO,MAAAA,MAAM,CAACV,CAAC,GAAC,CAAH,CAAN,CAAYC,CAAZ,IAAe,CAAf;AACH;;AACD,QAAG,KAAKQ,MAAL,CAAYT,CAAC,GAAC,CAAd,EAAgBC,CAAhB,EAAkBS,MAAlB,CAAH,EACA;AACIA,MAAAA,MAAM,CAACV,CAAC,GAAC,CAAH,CAAN,CAAYC,CAAZ,IAAeE,CAAC,EAAhB;AACAU,MAAAA,IAAI,IAAE,KAAKT,OAAL,CAAaJ,CAAC,GAAC,CAAf,EAAiBC,CAAjB,EAAmBS,MAAnB,EAA0BR,GAA1B,EAA8BC,CAA9B,CAAN;AACAA,MAAAA,CAAC;AACDO,MAAAA,MAAM,CAACV,CAAC,GAAC,CAAH,CAAN,CAAYC,CAAZ,IAAe,CAAf;AACH;;AACD,QAAG,KAAKQ,MAAL,CAAYT,CAAZ,EAAcC,CAAC,GAAC,CAAhB,EAAkBS,MAAlB,CAAH,EACA;AACIA,MAAAA,MAAM,CAACV,CAAD,CAAN,CAAUC,CAAC,GAAC,CAAZ,IAAeE,CAAC,EAAhB;AACAU,MAAAA,IAAI,IAAE,KAAKT,OAAL,CAAaJ,CAAb,EAAeC,CAAC,GAAC,CAAjB,EAAmBS,MAAnB,EAA0BR,GAA1B,EAA8BC,CAA9B,CAAN;AACAA,MAAAA,CAAC;AACDO,MAAAA,MAAM,CAACV,CAAD,CAAN,CAAUC,CAAC,GAAC,CAAZ,IAAe,CAAf;AACH;;AACD,QAAG,KAAKQ,MAAL,CAAYT,CAAZ,EAAcC,CAAC,GAAC,CAAhB,EAAkBS,MAAlB,CAAH,EACA;AACIA,MAAAA,MAAM,CAACV,CAAD,CAAN,CAAUC,CAAC,GAAC,CAAZ,IAAeE,CAAC,EAAhB;AACAU,MAAAA,IAAI,IAAE,KAAKT,OAAL,CAAaJ,CAAb,EAAeC,CAAC,GAAC,CAAjB,EAAmBS,MAAnB,EAA0BR,GAA1B,EAA8BC,CAA9B,CAAN;AACAA,MAAAA,CAAC;AACDO,MAAAA,MAAM,CAACV,CAAD,CAAN,CAAUC,CAAC,GAAC,CAAZ,IAAe,CAAf;AACH;;AAED,WAAOY,IAAP;AACH;;AAuBDC,EAAAA,MAAM,GACN;AACI,wBACI,QAAC,QAAD;AAAA,8BACI;AAAK,QAAA,SAAS,EAAE5B,OAAO,CAAC6B,aAAxB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAE7B,OAAO,CAAC8B,aAAxB;AAAA,oBACC,KAAKR,KAAL,CAAWV,IAAX,CAAgBmB,GAAhB,CAAoBC,CAAC,IAAE;AACxB,mBACIA,CAAC,CAACD,GAAF,CAAME,EAAE,IAAE;AACN,kCAAO,QAAC,IAAD;AAAM,gBAAA,KAAK,EAAEA;AAAb;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,aAFD,CADJ;AAIE,WALD;AADD;AAAA;AAAA;AAAA;AAAA,gBADJ,EAYK,KAAKX,KAAL,CAAWF,SAAX,CAAqBc,MAArB,GAA4B,CAA5B,gBAA8B,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKb,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA9B,gBACD,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKV,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAeI;AAAK,UAAA,SAAS,EAAEX,OAAO,CAACmC,SAAxB;AAAA,qEACmC;AAAA,sBAAO,KAAKb,KAAL,CAAWF,SAAX,CAAqBc;AAA5B;AAAA;AAAA;AAAA;AAAA,kBADnC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAsBK;AAAK,QAAA,SAAS,EAAElC,OAAO,CAACoC,kBAAxB;AAAA,kBACI,KAAKd,KAAL,CAAWF,SAAX,CAAqBc,MAArB,GAA4B,CAA5B,IAAiC,KAAKZ,KAAL,CAAWF,SAAX,CAAqBW,GAArB,CAAyBM,IAAI,IAAE;AAC7D,8BAAO,QAAC,SAAD;AAAW,YAAA,MAAM,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFiC;AADrC;AAAA;AAAA;AAAA;AAAA,cAtBL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA+BH;;AAlJL;;AAsJA,eAAejC,IAAf","sourcesContent":["import React,{Component,Fragment} from 'react'\nimport classes from './Maze.module.css'\nimport Cell from '../Cell/Cell'\nimport Button from '../Button/Button'\nimport Solutions from '../Solutions/Solutions'\n\n\n\nclass Maze extends Component\n{\n   \n    constructor(props)\n    {\n        super(props)\n        let grid=new Array(3)\n        for(let i=0;i<3;i++)\n          grid[i]=new Array(3)\n\n          for(let i=0;i<3;i++)\n          {\n              for(let j=0;j<3;j++)\n               grid[i][j]=0;  \n          }\n\n          //1 denotes constraint\n          grid[1][0]=1\n          \n\n        \n\n          //-1 is start\n          grid[0][0]=-1\n\n          //3 denote end\n          grid[2][2]=3\n\n          //2 denotes valid answer\n\n\n        this.state={\n            grid:null,\n            solutions:[]\n        }\n    }\n\n\n    submit=(val)=>{\n\n\n        console.log(val)\n\n    }\n\n    isSafe(i,j,matrix)\n    {\n        return i>=0 && j>=0 && i<3 && j<3 && matrix[i][j]===0 && this.state.grid[i][j]!==1\n    }\n\n    \n    recurse(i,j,matrix,ans,l)\n    {\n        \n        if(i===2 && j===2 )\n        {\n            ans.push(matrix.toString())\n            return true\n        }\n\n        let flag=0;\n        if(this.isSafe(i-1,j,matrix))\n        {\n            matrix[i-1][j]=l++\n            flag|=this.recurse(i-1,j,matrix,ans,l)\n            l--\n            matrix[i-1][j]=0\n        }\n        if(this.isSafe(i+1,j,matrix))\n        {\n            matrix[i+1][j]=l++\n            flag|=this.recurse(i+1,j,matrix,ans,l)\n            l--\n            matrix[i+1][j]=0\n        }\n        if(this.isSafe(i,j-1,matrix))\n        {\n            matrix[i][j-1]=l++\n            flag|=this.recurse(i,j-1,matrix,ans,l)\n            l--\n            matrix[i][j-1]=0\n        }\n        if(this.isSafe(i,j+1,matrix))\n        {\n            matrix[i][j+1]=l++\n            flag|=this.recurse(i,j+1,matrix,ans,l)\n            l--\n            matrix[i][j+1]=0\n        }\n\n        return flag;\n    }\n\n    onClick=()=>{\n        let grid=new Array(3)\n        for(let i=0;i<3;i++)\n          grid[i]=new Array(3)\n\n          for(let i=0;i<3;i++)\n          {\n              for(let j=0;j<3;j++)\n               grid[i][j]=0;  \n          }\n\n         let ans=[]\n         let l=2\n         this.recurse(0,0,grid,ans,l)\n         this.setState({solutions:ans})\n    }\n\n    tryAgain=()=>{\n         this.setState({solutions:[]})\n    }\n\n    render()\n    {\n        return (\n            <Fragment>\n                <div className={classes.mainContainer}>\n                    <div className={classes.gridContainer}>\n                    {this.state.grid.map(g=>{\n                    return (\n                        g.map(gc=>{\n                            return <Cell value={gc}></Cell>\n                        })\n                    )}\n                    )}\n            \n                    </div>\n\n                    {this.state.solutions.length>0?<Button onClick={this.tryAgain}>Try Again</Button>:\n                    <Button onClick={this.onClick}>Calculate Results</Button>}\n                    \n                    <div className={classes.container}>\n                        Total number of solutions are: <bold>{this.state.solutions.length}</bold> \n                    </div>\n\n                </div>\n              \n                 <div className={classes.secondaryContainer}>\n                    {this.state.solutions.length>0 && this.state.solutions.map(soln=>{\n                        return <Solutions string={soln}/>\n                    }) }\n                 </div>\n               \n            </Fragment>     \n        )\n    }\n\n}\n\nexport default Maze"]},"metadata":{},"sourceType":"module"}