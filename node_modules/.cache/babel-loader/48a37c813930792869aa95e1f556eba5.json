{"ast":null,"code":"var _jsxFileName = \"/home/kaif/Desktop/Web-dev/rat-in-a-maze/rat-in-a-maze/src/components/Solutions/Solutions.js\";\nimport React from 'react';\nimport classes from './Solutions.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Solutions = props => {\n  let grid = new Array(props.size);\n\n  for (let i = 0; i < props.size; i++) grid[i] = new Array(props.size);\n\n  let idx = 0;\n\n  for (let i = 0; i < props.size; i++) {\n    for (let j = 0; j < props.size; j++) {\n      grid[i][j] = parseInt(props.string[idx]);\n      idx += 2;\n    }\n  }\n\n  console.log(grid);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.gridContainer,\n    style: {\n      gridTemplateColumns: `repeat(${props.size},1fr)`\n    },\n    children: grid.map(g => {\n      console.log(g);\n      return g.map(gc => {\n        //console.log(gc)\n        return gc > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.gridItem,\n          style: {\n            backgroundColor: 'green'\n          },\n          children: gc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.gridItem,\n          style: {\n            backgroundColor: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 20\n        }, this);\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Solutions;\nexport default Solutions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Solutions\");","map":{"version":3,"sources":["/home/kaif/Desktop/Web-dev/rat-in-a-maze/rat-in-a-maze/src/components/Solutions/Solutions.js"],"names":["React","classes","Solutions","props","grid","Array","size","i","idx","j","parseInt","string","console","log","gridContainer","gridTemplateColumns","map","g","gc","gridItem","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAGA,MAAMC,SAAS,GAACC,KAAK,IAAE;AAEnB,MAAIC,IAAI,GAAC,IAAIC,KAAJ,CAAUF,KAAK,CAACG,IAAhB,CAAT;;AACA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,KAAK,CAACG,IAApB,EAAyBC,CAAC,EAA1B,EACEH,IAAI,CAACG,CAAD,CAAJ,GAAQ,IAAIF,KAAJ,CAAUF,KAAK,CAACG,IAAhB,CAAR;;AAGF,MAAIE,GAAG,GAAC,CAAR;;AAGA,OAAI,IAAID,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,KAAK,CAACG,IAApB,EAAyBC,CAAC,EAA1B,EACA;AACI,SAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACN,KAAK,CAACG,IAApB,EAAyBG,CAAC,EAA1B,EACC;AACGL,MAAAA,IAAI,CAACG,CAAD,CAAJ,CAAQE,CAAR,IAAWC,QAAQ,CAACP,KAAK,CAACQ,MAAN,CAAaH,GAAb,CAAD,CAAnB;AACAA,MAAAA,GAAG,IAAE,CAAL;AACF;AACL;;AAEDI,EAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACa,aAAxB;AAAuC,IAAA,KAAK,EAAE;AAACC,MAAAA,mBAAmB,EAAE,UAASZ,KAAK,CAACG,IAAK;AAA1C,KAA9C;AAAA,cACCF,IAAI,CAACY,GAAL,CAASC,CAAC,IAAE;AACTL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AAED,aACIA,CAAC,CAACD,GAAF,CAAME,EAAE,IAAE;AACL;AACD,eAAQA,EAAE,GAAC,CAAH,gBAAK;AAAK,UAAA,SAAS,EAAEjB,OAAO,CAACkB,QAAxB;AAAkC,UAAA,KAAK,EAAE;AAACC,YAAAA,eAAe,EAAC;AAAjB,WAAzC;AAAA,oBAAqEF;AAArE;AAAA;AAAA;AAAA;AAAA,gBAAL,gBACR;AAAK,UAAA,SAAS,EAAEjB,OAAO,CAACkB,QAAxB;AAAkC,UAAA,KAAK,EAAE;AAACC,YAAAA,eAAe,EAAC;AAAjB;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADA;AAIV,OANM,CADJ;AAQD,KAXD;AADD;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAzCD;;KAAMlB,S;AA2CN,eAAeA,SAAf","sourcesContent":["import React from 'react'\nimport classes from './Solutions.module.css'\n\n\nconst Solutions=props=>{\n\n    let grid=new Array(props.size)\n    for(let i=0;i<props.size;i++)\n      grid[i]=new Array(props.size)\n\n\n    let idx=0;\n   \n\n    for(let i=0;i<props.size;i++)\n    {\n        for(let j=0;j<props.size;j++)\n         {\n            grid[i][j]=parseInt(props.string[idx]);\n            idx+=2;\n         }\n    }\n\n    console.log(grid)\n\n    return (\n        <div className={classes.gridContainer} style={{gridTemplateColumns:`repeat(${props.size},1fr)`}}>\n        {grid.map(g=>{\n            console.log(g)\n\n           return (\n               g.map(gc=>{\n                    //console.log(gc)\n                   return (gc>0?<div className={classes.gridItem} style={{backgroundColor:'green'}}>{gc}</div>:\n                   <div className={classes.gridItem} style={{backgroundColor:'white'}}/>    \n\n                   )\n        })\n        )}\n        )}\n\n        </div>\n        \n    )\n\n}\n\nexport default Solutions"]},"metadata":{},"sourceType":"module"}